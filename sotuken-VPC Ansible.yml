AWSTemplateFormatVersion: 2010-09-09
Parameters:
  # VPC
  VpcCidrBlock:
    Description: Input a VPC IPv4 CidrBlock. ex) 10.0.0.0/16
    Type: String
  VpcName:
    Description: Input a VPC name. This Parameter will be a Name tag.
    Type: String
    Default: ""
  
  # Public Subnet
  AZ1:
    Description: Input a AZ where Public Subnet will be created.
    Type: AWS::EC2::AvailabilityZone::Name
  PublicSubnetCidrBlock:
    Description: Input a Public Subnet IPv4 CidrBlock.  ex) 10.0.0.0/24
    Type: String
  PublicSubnetName:
    Description: Input a Public Subnet name. This Parameter will be a Name tag.
    Type: String
    Default: ""
  
  # Ansible Subnet
  AZ2:
    Description: Input a AZ where Public Subnet will be created.
    Type: AWS::EC2::AvailabilityZone::Name
  AnsibleSubnetCidrBlock:
    Description: Input a Ansible Subnet IPv4 CidrBlock.  ex) 10.0.1.0/24
    Type: String
  AnsibleSubnetName:
    Description: Input a Ansible Subnet name. This Parameter will be a Name tag.
    Type: String
    Default: ""
  
  
  # Internet GW
  InternetGwName:
    Description: Input a IntenetGW name. This Parameter will be a Name tag.
    Type: String
    Default: ""
  
  # RouteTable for Public Subnet
  RouteTableName:
    Description: Input a RouteTable name. This Parameter will be a Name tag.
    Type: String
    Default: ""
Resources:
 
  # VPC
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Ref VpcName

  # PublicSubnet
  MyPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AZ1
      CidrBlock: !Ref PublicSubnetCidrBlock
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Ref PublicSubnetName
      VpcId: !Ref MyVPC
  
  # AnsibleSubnet
  MyAnsibleSubnet:
    Type: AWS::EC2::Subnet
    Properties:
     AvailabilityZone: !Ref AZ2
     CidrBlock: !Ref AnsibleSubnetCidrBlock
     MapPublicIpOnLaunch: true
     Tags:
       - Key: Name
         Value: !Ref AnsibleSubnetCidrBlock
     VpcId: !Ref MyVPC
  
  # InternetGW
  MyInternetGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref InternetGwName
  MyVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref MyInternetGW
      VpcId: !Ref MyVPC
  
  # RouteTable
  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Ref RouteTableName
      VpcId: !Ref MyVPC
  MyRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGW
      RouteTableId: !Ref MyRouteTable
  MyPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyRouteTable
      SubnetId: !Ref MyPublicSubnet
  MyAnsibleSubnetRoutetableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyRouteTable
      SubnetId: !Ref MyAnsibleSubnet